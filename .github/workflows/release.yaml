name: Reusable release workflow

on:
  workflow_call:
    inputs:
      repository:
        type: string
        required: false
        default: ${{ github.repository }}/${{ github.workflow }}
      image:
        type: string
        required: false
        default: ${{ github.workflow }}
      target:
        type: string
        required: false
        default: 'prod'
      tag:
        type: string
        required: false
        default: 'latest'
      packages:
        type: string
        required: false
        default: ''
      archs:
        type: string
        required: false
        default: 'amd64,arm64'
      scan:
        type: string
        required: false
        default: 'true'
      scan-fail-on:
        type: string
        required: false
        default: ''

jobs:
  publish:
    permissions:
      actions: read
      attestations: write
      contents: read
      id-token: write
      packages: write
      security-events: write
    runs-on: ubuntu-latest
    outputs:
      digest: ${{ steps.output.outputs.digest }}
      registry: ${{ steps.vars.outputs.registry }}
      image: ${{ steps.vars.outputs.image }}
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Set Vars
        id: vars
        shell: bash
        run: |
          export REGISTRY="ghcr.io"
          if [[ "${{ github.ref_name }}" != "main" ]]; then
            export REGISTRY="ttl.sh"
          fi
          echo "registry=${REGISTRY}" >> $GITHUB_OUTPUT
          echo "image=${REGISTRY}/${{ inputs.repository }}:${{ inputs.tag }}" >> $GITHUB_OUTPUT

      - if: steps.vars.outputs.registry == 'ghcr.io'
        name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}

      - name: Publish and Sign with Dagger
        id: publish
        uses: dagger/dagger-for-github@v8.2.0
        env:
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ env.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ env.ACTIONS_ID_TOKEN_REQUEST_URL }}
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          version: 'latest'
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          call: |
            --github-actions=true \
            --github-actor=${{ github.actor }} \
            --github-repository=${{ github.repository }} \
            --github-repository-owner=${{ github.repository_owner }} \
            --github-token=env://GITHUB_TOKEN \
            --github-oidc-provider-token=env://ACTIONS_ID_TOKEN_REQUEST_TOKEN \
            --github-oidc-provider-url=env://ACTIONS_ID_TOKEN_REQUEST_URL \
            with-cosign-oidc \
              --provider='github-actions' \
            publish \
              --image=${{ inputs.image }} \
              --variant=${{ inputs.target }} \
              --tag=${{ steps.vars.outputs.image }} \
              --platform=${{ inputs.archs }} \
              --scan=${{ inputs.scan }} \
              --severity=${{ inputs.scan-fail-on }} \
              --sign=true \

      - if: steps.vars.outputs.registry == 'ghcr.io'
        name: Attest build provenance
        uses: actions/attest-build-provenance@v3
        with:
          subject-name: ${{ steps.vars.outputs.registry }}/${{ inputs.repository }}
          subject-digest: ${{ steps.publish.outputs.output }}
          push-to-registry: true

      - name: Set output
        id: output
        run: echo "digest=${{ steps.publish.outputs.output }}" >> $GITHUB_OUTPUT

  slsa:
    permissions:
      actions: read
      id-token: write
      packages: write
    needs: publish
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_container_slsa3.yml@v2.1.0
    with:
      image: ${{ needs.publish.outputs.image }}
      digest: ${{ needs.publish.outputs.digest }}
    secrets:
      registry-username: ${{ github.actor }}
      registry-password: ${{ secrets.GITHUB_TOKEN }}

  scan:
    if: inputs.scan == 'true'
    permissions:
      actions: read
      contents: read
      packages: read
      security-events: write
    needs: publish
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5

      - name: Scan image
        id: scan
        uses: dagger/dagger-for-github@v8.2.0
        with:
          version: 'latest'
          cloud-token: ${{ secrets.DAGGER_CLOUD_TOKEN }}
          module: github.com/opopops/daggerverse/grype@main
          call: |
            scan-image \
              --source=${{ needs.publish.outputs.image }} \
              --output-format=sarif \
              --fail=false \
            export --path ${{ runner.temp }}/grype.sarif \

      - name: Upload SARIF
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ runner.temp }}/grype.sarif
          category: ${{ github.workflow }}
